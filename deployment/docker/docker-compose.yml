version: '3.7'
services:
  kubemq:
    image: kubemq/kubemq:v1.5.1
    container_name: kubemq
    ports:
      - "8080:8080"
      - "9090:9090"
      - "50000:50000"
    environment:
      - KUBEMQ_HOST=kubemq
      - KUBEMQ_TOKEN=c5111981-0a76-45f1-81a3-080af7fb6028
    networks:
      - backend
      - frontend
    volumes:
      - kubemq_vol:/store
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - backend
  kibana:
    image: docker.elastic.co/kibana/kibana:7.0.1
    container_name: kibana
    environment:
        SERVER_NAME: localhost
        ELASTICSEARCH_URL: http://elasticsearch:9200/
    ports:
      - "5601:5601"
    networks:
      - backend
#  kubemq-elastic:
#    image: kubemq/kubemq-elastic:v0.1.0
#    container_name: kubemq-elastic
#    environment:
#      ELASTIC_ADDRESS: http://elasticsearch:9200/
#      KUBEMQ_HOST: kubemq
#      KUBEMQ_POST: 50000
#      CHANNEL: "history"
#      GROUP: ""
#    networks:
#      - backend
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend
#  kubemq-redis:
#    image: kubemq/kubemq-redis:v0.1.0
#    container_name: kubemq-redis
#    environment:
#      REDIS_ADDRESS: "redis:6379"
#      KUBEMQ_HOST: kubemq
#      KUBEMQ_POST: 50000
#      CHANNEL: "redis"
#      GROUP: ""
#      LogsChannel: "Elastic"
#    networks:
#        - backend
  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: "password"
    ports:
      - "5432:5432"
    networks:
      - backend
    volumes:
      - postgress_vol:/var/lib/postgresql/data
#  dashboard:
#    image: kubemq/kubemq-dashboard:latest
#    container_name: dashboard
#    environment:
#      SOCKET_API: ws://kubemq:8080/v1/stats/
#      DASHBOARD_API: //kubemq:8080/v1/stats/
#    ports:
#      - "8888:80"
#    networks:
#      - backend
#    volumes:
#      - postgress_vol:/var/lib/postgresql/data

networks:
  backend:
  frontend:
volumes:
  kubemq_vol:
  postgress_vol: